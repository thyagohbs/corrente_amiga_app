// Mocks generated by Mockito 5.4.5 from annotations
// in app/test/screens/lista_animais_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:app/models/animal.dart' as _i4;
import 'package:app/services/api_service.dart' as _i2;
import 'package:app/view_models/lista_animais_view_model.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ListaAnimaisViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockListaAnimaisViewModel extends _i1.Mock
    implements _i3.ListaAnimaisViewModel {
  MockListaAnimaisViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get apiService =>
      (super.noSuchMethod(
            Invocation.getter(#apiService),
            returnValue: _FakeApiService_0(
              this,
              Invocation.getter(#apiService),
            ),
          )
          as _i2.ApiService);

  @override
  List<_i4.Animal> get animais =>
      (super.noSuchMethod(
            Invocation.getter(#animais),
            returnValue: <_i4.Animal>[],
          )
          as List<_i4.Animal>);

  @override
  bool get carregando =>
      (super.noSuchMethod(Invocation.getter(#carregando), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> buscarAnimais() =>
      (super.noSuchMethod(
            Invocation.method(#buscarAnimais, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
